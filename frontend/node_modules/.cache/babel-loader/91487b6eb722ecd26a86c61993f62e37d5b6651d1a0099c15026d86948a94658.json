{"ast":null,"code":"// src/api.js\nimport axios from \"axios\";\n\n// Em produção (Railway, mesmo domínio do backend) usamos /api.\n// Em desenvolvimento, se você rodar o frontend em 3000 e o backend em 8080,\nconst baseURL = process.env.REACT_APP_API_URL && process.env.REACT_APP_API_URL.trim() !== \"\" ? process.env.REACT_APP_API_URL : \"/api\";\nconst API = axios.create({\n  baseURL\n});\nAPI.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport default API;","map":{"version":3,"names":["axios","baseURL","process","env","REACT_APP_API_URL","trim","API","create","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization"],"sources":["C:/Users/mathe/Desktop/Projeto_Sigef/frontend/src/api.js"],"sourcesContent":["// src/api.js\r\nimport axios from \"axios\";\r\n\r\n// Em produção (Railway, mesmo domínio do backend) usamos /api.\r\n// Em desenvolvimento, se você rodar o frontend em 3000 e o backend em 8080,\r\nconst baseURL =\r\n  process.env.REACT_APP_API_URL && process.env.REACT_APP_API_URL.trim() !== \"\"\r\n    ? process.env.REACT_APP_API_URL\r\n    : \"/api\";\r\n\r\nconst API = axios.create({ baseURL });\r\n\r\nAPI.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n\r\nexport default API;\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA,MAAMC,OAAO,GACXC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAIF,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,GACxEH,OAAO,CAACC,GAAG,CAACC,iBAAiB,GAC7B,MAAM;AAEZ,MAAME,GAAG,GAAGN,KAAK,CAACO,MAAM,CAAC;EAAEN;AAAQ,CAAC,CAAC;AAErCK,GAAG,CAACE,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAGF,eAAeL,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}