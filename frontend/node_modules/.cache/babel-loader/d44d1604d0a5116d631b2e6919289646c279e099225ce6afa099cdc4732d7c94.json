{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\Desktop\\\\Projeto_Sigef\\\\frontend\\\\src\\\\components\\\\Upload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport API from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Upload({\n  onUploaded\n}) {\n  _s();\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleChange = e => {\n    setFile(e.target.files[0] || null);\n  };\n  const handleUpload = async () => {\n    if (!file) return;\n    const form = new FormData();\n    form.append(\"file\", file);\n    setLoading(true);\n    try {\n      const res = await API.post(\"/upload-pdf\", form, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      onUploaded(res.data);\n    } catch (err) {\n      console.error(err);\n      alert(\"Erro no upload\");\n    } finally {\n      setLoading(false);\n      setFile(null);\n      // opcional: limpar o input\n      document.getElementById(\"file-input\").value = \"\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card upload-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"file-input\",\n      type: \"file\",\n      accept: \".pdf\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"upload-button\",\n      disabled: !file || loading,\n      onClick: handleUpload,\n      children: loading ? \"Enviando…\" : \"Enviar PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Upload, \"b5r+Px8JiWNYfU82tOaR18FdgbQ=\");\n_c = Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useState","API","jsxDEV","_jsxDEV","Upload","onUploaded","_s","file","setFile","loading","setLoading","handleChange","e","target","files","handleUpload","form","FormData","append","res","post","headers","data","err","console","error","alert","document","getElementById","value","className","children","id","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mathe/Desktop/Projeto_Sigef/frontend/src/components/Upload.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport API from \"../api\";\r\n\r\nexport default function Upload({ onUploaded }) {\r\n  const [file, setFile] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    setFile(e.target.files[0] || null);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) return;\r\n    const form = new FormData();\r\n    form.append(\"file\", file);\r\n    setLoading(true);\r\n    try {\r\n      const res = await API.post(\"/upload-pdf\", form, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n      onUploaded(res.data);\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Erro no upload\");\r\n    } finally {\r\n      setLoading(false);\r\n      setFile(null);\r\n      // opcional: limpar o input\r\n      document.getElementById(\"file-input\").value = \"\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card upload-form\">\r\n      <input\r\n        id=\"file-input\"\r\n        type=\"file\"\r\n        accept=\".pdf\"\r\n        onChange={handleChange}\r\n      />\r\n      <button\r\n        className=\"upload-button\"\r\n        disabled={!file || loading}\r\n        onClick={handleUpload}\r\n      >\r\n        {loading ? \"Enviando…\" : \"Enviar PDF\"}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,eAAe,SAASC,MAAMA,CAAC;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAC7C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMW,YAAY,GAAIC,CAAC,IAAK;IAC1BJ,OAAO,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;EACpC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACR,IAAI,EAAE;IACX,MAAMS,IAAI,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC3BD,IAAI,CAACE,MAAM,CAAC,MAAM,EAAEX,IAAI,CAAC;IACzBG,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMS,GAAG,GAAG,MAAMlB,GAAG,CAACmB,IAAI,CAAC,aAAa,EAAEJ,IAAI,EAAE;QAC9CK,OAAO,EAAE;UAAE,cAAc,EAAE;QAAsB;MACnD,CAAC,CAAC;MACFhB,UAAU,CAACc,GAAG,CAACG,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBG,KAAK,CAAC,gBAAgB,CAAC;IACzB,CAAC,SAAS;MACRhB,UAAU,CAAC,KAAK,CAAC;MACjBF,OAAO,CAAC,IAAI,CAAC;MACb;MACAmB,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACC,KAAK,GAAG,EAAE;IAClD;EACF,CAAC;EAED,oBACE1B,OAAA;IAAK2B,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/B5B,OAAA;MACE6B,EAAE,EAAC,YAAY;MACfC,IAAI,EAAC,MAAM;MACXC,MAAM,EAAC,MAAM;MACbC,QAAQ,EAAExB;IAAa;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACFpC,OAAA;MACE2B,SAAS,EAAC,eAAe;MACzBU,QAAQ,EAAE,CAACjC,IAAI,IAAIE,OAAQ;MAC3BgC,OAAO,EAAE1B,YAAa;MAAAgB,QAAA,EAErBtB,OAAO,GAAG,WAAW,GAAG;IAAY;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACjC,EAAA,CA9CuBF,MAAM;AAAAsC,EAAA,GAANtC,MAAM;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}