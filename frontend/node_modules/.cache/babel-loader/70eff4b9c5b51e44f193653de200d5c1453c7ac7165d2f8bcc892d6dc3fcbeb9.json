{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\Desktop\\\\Projeto_Sigef\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { Routes, Route, Link, useNavigate } from \"react-router-dom\";\nimport Upload from \"./components/Upload\";\nimport IntervalRow from \"./components/IntervalRow\";\nimport Search from \"./components/Search\";\nimport PointInfo from \"./components/PointInfo\";\nimport CertificateInfo from \"./components/CertificateInfo\";\nimport CertificatesList from \"./components/CertificatesList\";\nimport CertificateDetail from \"./components/CertificateDetail\";\nimport API from \"./api\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  var _stats$total_certific;\n  const prefixes = [\"D5Y-M\", \"D5Y-P\", \"D5Y-V\"];\n  const [stats, setStats] = useState(null);\n  const [intervals, setIntervals] = useState({});\n  const navigate = useNavigate();\n\n  // --- Fetch stats ---\n  const fetchStats = useCallback(async () => {\n    try {\n      const r = await API.get(\"/stats\");\n      setStats(r.data);\n    } catch (e) {\n      console.error(\"Erro ao buscar stats\", e);\n    }\n  }, []);\n\n  // --- Fetch intervals por prefixo ---\n  const fetchIntervals = useCallback(async () => {\n    const res = {};\n    for (const p of prefixes) {\n      try {\n        const r = await API.get(`/intervals/${p}`);\n        res[p] = r.data;\n      } catch {\n        res[p] = null;\n      }\n    }\n    setIntervals(res);\n  }, []);\n\n  // Na montagem, busca stats e intervals\n  useEffect(() => {\n    fetchStats();\n    fetchIntervals();\n  }, [fetchStats, fetchIntervals]);\n\n  // Handler ao subir PDF: atualiza tudo e volta para /\n  const handleUploaded = async () => {\n    await Promise.all([fetchStats(), fetchIntervals()]);\n    navigate(\"/\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"SIGEF Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Upload, {\n            onUploaded: handleUploaded\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            style: {\n              display: \"flex\",\n              alignItems: \"center\",\n              gap: 8\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"N\\xFAmero de certificados:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: (_stats$total_certific = stats === null || stats === void 0 ? void 0 : stats.total_certificados) !== null && _stats$total_certific !== void 0 ? _stats$total_certific : 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/certificates\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"Ver certificados\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), prefixes.map(p => intervals[p] ? /*#__PURE__*/_jsxDEV(IntervalRow, {\n            prefix: p,\n            missingIntervals: intervals[p].missing_intervals,\n            currentInterval: intervals[p].current_interval,\n            nextInterval: intervals[p].next_interval\n          }, p, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 19\n          }, this) : null), /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/certificates\",\n        element: /*#__PURE__*/_jsxDEV(CertificatesList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/certificates/:id\",\n        element: /*#__PURE__*/_jsxDEV(CertificateDetail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"x/QfbkWslr3yGcO8mtHdXg7kruw=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Routes","Route","Link","useNavigate","Upload","IntervalRow","Search","PointInfo","CertificateInfo","CertificatesList","CertificateDetail","API","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","_stats$total_certific","prefixes","stats","setStats","intervals","setIntervals","navigate","fetchStats","r","get","data","e","console","error","fetchIntervals","res","p","handleUploaded","Promise","all","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onUploaded","style","display","alignItems","gap","total_certificados","to","map","prefix","missingIntervals","missing_intervals","currentInterval","current_interval","nextInterval","next_interval","_c","$RefreshReg$"],"sources":["C:/Users/mathe/Desktop/Projeto_Sigef/frontend/src/App.js"],"sourcesContent":["// src/App.js\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport { Routes, Route, Link, useNavigate } from \"react-router-dom\";\r\nimport Upload from \"./components/Upload\";\r\nimport IntervalRow from \"./components/IntervalRow\";\r\nimport Search from \"./components/Search\";\r\nimport PointInfo from \"./components/PointInfo\";\r\nimport CertificateInfo from \"./components/CertificateInfo\";\r\nimport CertificatesList from \"./components/CertificatesList\";\r\nimport CertificateDetail from \"./components/CertificateDetail\";\r\nimport API from \"./api\";\r\n\r\nexport default function App() {\r\n  const prefixes = [\"D5Y-M\", \"D5Y-P\", \"D5Y-V\"];\r\n  const [stats, setStats] = useState(null);\r\n  const [intervals, setIntervals] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  // --- Fetch stats ---\r\n  const fetchStats = useCallback(async () => {\r\n    try {\r\n      const r = await API.get(\"/stats\");\r\n      setStats(r.data);\r\n    } catch (e) {\r\n      console.error(\"Erro ao buscar stats\", e);\r\n    }\r\n  }, []);\r\n\r\n  // --- Fetch intervals por prefixo ---\r\n  const fetchIntervals = useCallback(async () => {\r\n    const res = {};\r\n    for (const p of prefixes) {\r\n      try {\r\n        const r = await API.get(`/intervals/${p}`);\r\n        res[p] = r.data;\r\n      } catch {\r\n        res[p] = null;\r\n      }\r\n    }\r\n    setIntervals(res);\r\n  }, []);\r\n\r\n  // Na montagem, busca stats e intervals\r\n  useEffect(() => {\r\n    fetchStats();\r\n    fetchIntervals();\r\n  }, [fetchStats, fetchIntervals]);\r\n\r\n  // Handler ao subir PDF: atualiza tudo e volta para /\r\n  const handleUploaded = async () => {\r\n    await Promise.all([fetchStats(), fetchIntervals()]);\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header>\r\n        <h1>SIGEF Manager</h1>\r\n      </header>\r\n\r\n      <Routes>\r\n        {/* 1) Tela inicial */}\r\n        <Route\r\n          path=\"/\"\r\n          element={\r\n            <>\r\n              <Upload onUploaded={handleUploaded} />\r\n\r\n              <div className=\"card\" style={{ display: \"flex\", alignItems: \"center\", gap: 8 }}>\r\n                <strong>NÃºmero de certificados:</strong>\r\n                <span>{stats?.total_certificados ?? 0}</span>\r\n                <Link to=\"/certificates\">\r\n                  <button>Ver certificados</button>\r\n                </Link>\r\n              </div>\r\n\r\n              {prefixes.map((p) =>\r\n                intervals[p] ? (\r\n                  <IntervalRow\r\n                    key={p}\r\n                    prefix={p}\r\n                    missingIntervals={intervals[p].missing_intervals}\r\n                    currentInterval={intervals[p].current_interval}\r\n                    nextInterval={intervals[p].next_interval}\r\n                  />\r\n                ) : null\r\n              )}\r\n\r\n              <Search />\r\n            </>\r\n          }\r\n        />\r\n\r\n        {/* 2) Lista de certificados */}\r\n        <Route path=\"/certificates\" element={<CertificatesList />} />\r\n\r\n        {/* 3) Detalhe de um certificado */}\r\n        <Route path=\"/certificates/:id\" element={<CertificateDetail />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}