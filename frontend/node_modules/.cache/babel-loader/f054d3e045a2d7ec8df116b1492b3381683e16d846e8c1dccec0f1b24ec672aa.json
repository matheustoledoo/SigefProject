{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\Desktop\\\\Projeto_Sigef\\\\frontend\\\\src\\\\components\\\\Upload.js\",\n  _s = $RefreshSig$();\n// src/components/Upload.js\nimport React, { useState } from \"react\";\nimport API from \"../api\";\nimport { showToast } from \"../toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Upload({\n  onUploaded\n}) {\n  _s();\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleSend = async () => {\n    if (!file) return;\n    const form = new FormData();\n    form.append(\"file\", file);\n    setLoading(true);\n    try {\n      const res = await API.post(\"/upload-pdf\", form, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      showToast(\"PDF enviado com sucesso\");\n      if (onUploaded) onUploaded();\n    } catch (err) {\n      var _err$response, _err$response$data;\n      const detail = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || err.message;\n      showToast(\"Erro no upload: \" + detail);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 16\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"application/pdf\",\n      onChange: e => {\n        var _e$target$files;\n        setFile(((_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0]) || null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      disabled: !file || loading,\n      style: {\n        marginLeft: 8\n      },\n      children: loading ? \"Enviando...\" : \"Enviar PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Upload, \"b5r+Px8JiWNYfU82tOaR18FdgbQ=\");\n_c = Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useState","API","showToast","jsxDEV","_jsxDEV","Upload","onUploaded","_s","file","setFile","loading","setLoading","handleSend","form","FormData","append","res","post","headers","err","_err$response","_err$response$data","detail","response","data","message","style","marginBottom","children","type","accept","onChange","e","_e$target$files","target","files","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/mathe/Desktop/Projeto_Sigef/frontend/src/components/Upload.js"],"sourcesContent":["// src/components/Upload.js\r\nimport React, { useState } from \"react\";\r\nimport API from \"../api\";\r\nimport { showToast } from \"../toast\";\r\n\r\nexport default function Upload({ onUploaded }) {\r\n  const [file, setFile] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSend = async () => {\r\n    if (!file) return;\r\n    const form = new FormData();\r\n    form.append(\"file\", file);\r\n    setLoading(true);\r\n    try {\r\n      const res = await API.post(\"/upload-pdf\", form, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n      showToast(\"PDF enviado com sucesso\");\r\n      if (onUploaded) onUploaded();\r\n    } catch (err) {\r\n      const detail = err.response?.data?.detail || err.message;\r\n      showToast(\"Erro no upload: \" + detail);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginBottom: 16 }}>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"application/pdf\"\r\n        onChange={(e) => {\r\n          setFile(e.target.files?.[0] || null);\r\n        }}\r\n      />\r\n      <button onClick={handleSend} disabled={!file || loading} style={{ marginLeft: 8 }}>\r\n        {loading ? \"Enviando...\" : \"Enviar PDF\"}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,QAAQ;AACxB,SAASC,SAAS,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,eAAe,SAASC,MAAMA,CAAC;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAC7C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACJ,IAAI,EAAE;IACX,MAAMK,IAAI,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC3BD,IAAI,CAACE,MAAM,CAAC,MAAM,EAAEP,IAAI,CAAC;IACzBG,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMK,GAAG,GAAG,MAAMf,GAAG,CAACgB,IAAI,CAAC,aAAa,EAAEJ,IAAI,EAAE;QAC9CK,OAAO,EAAE;UAAE,cAAc,EAAE;QAAsB;MACnD,CAAC,CAAC;MACFhB,SAAS,CAAC,yBAAyB,CAAC;MACpC,IAAII,UAAU,EAAEA,UAAU,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOa,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZ,MAAMC,MAAM,GAAG,EAAAF,aAAA,GAAAD,GAAG,CAACI,QAAQ,cAAAH,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcI,IAAI,cAAAH,kBAAA,uBAAlBA,kBAAA,CAAoBC,MAAM,KAAIH,GAAG,CAACM,OAAO;MACxDvB,SAAS,CAAC,kBAAkB,GAAGoB,MAAM,CAAC;IACxC,CAAC,SAAS;MACRX,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEP,OAAA;IAAKsB,KAAK,EAAE;MAAEC,YAAY,EAAE;IAAG,CAAE;IAAAC,QAAA,gBAC/BxB,OAAA;MACEyB,IAAI,EAAC,MAAM;MACXC,MAAM,EAAC,iBAAiB;MACxBC,QAAQ,EAAGC,CAAC,IAAK;QAAA,IAAAC,eAAA;QACfxB,OAAO,CAAC,EAAAwB,eAAA,GAAAD,CAAC,CAACE,MAAM,CAACC,KAAK,cAAAF,eAAA,uBAAdA,eAAA,CAAiB,CAAC,CAAC,KAAI,IAAI,CAAC;MACtC;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACFnC,OAAA;MAAQoC,OAAO,EAAE5B,UAAW;MAAC6B,QAAQ,EAAE,CAACjC,IAAI,IAAIE,OAAQ;MAACgB,KAAK,EAAE;QAAEgB,UAAU,EAAE;MAAE,CAAE;MAAAd,QAAA,EAC/ElB,OAAO,GAAG,aAAa,GAAG;IAAY;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAChC,EAAA,CArCuBF,MAAM;AAAAsC,EAAA,GAANtC,MAAM;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}